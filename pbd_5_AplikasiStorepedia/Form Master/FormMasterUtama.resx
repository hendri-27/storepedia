<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="buttonLogOut.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAASEhIAAAAAAAYGBjoFBQWGBQUFigUFBVQLCwsECgoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAREREAAAAAAAPDw8FDQ0NBx8f
        HwAbGxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wDgAB8A4AADAOAA
        AwDgAAMA4AAHAOAABwDgAAcA4AAHAOAADwDgAA8A4AAPAPAADwDwAB8A8AAfAPAAHwDwAB8A8AA/AP4A
        PwD+Mf8A/zH/AP8D/wD/g/8A/8//ACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFAAXFxcCBwgIEQgLCxUVGRkTDBEREAACAg4BAgINDhISDRwg
        IAwMERIJAAEBCAkMDAgkKSkHIScnBQIEBAMJDAwDOkBBA2dycgJ+oKEAdGlnAHfN0AAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAQEBEAGBATMDAcH1A4JCdENBwfLCwUFyQgE
        BMgLBwbHDQgIxAoGBr4GAwO8BwQEuwsICLkJBgaxBAMCrQQDA6wJBwerCQcHpQQDA50EBQVyAwYGLwgO
        DggAAAAAKzY2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYhsMDP8+HBv/PRsb/z0c
        G/89Gxv/Oxsa/zoaGf86Ghn/OhoZ/zgZGf83GRj/NxkY/zYZGP80GBf/MxcW/zMXF/80GBf/JxIR/w8H
        B/4ZDAzpCwcHswICAm8EBAQrEhISAgwMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQAAAABRGwwM+0cg
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMABgYGUAQE
        BJEAAAAAAAAAAFNZWQEbISEDcYWFAQYHB2QEBQWVAwQFEQAAABMDBAQTDQ0NDhYWFgAVFRUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYG
        BgAHBwc7BQUFoBcXFwUYGBgAAAAAAFpaWgAAAAAABQUFdgUFBXsAAAAATk5OAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABwcHAAYGBiIEBAS1CgoKHAsLCwAAAAAAJSUlAAAAAAAFBQWSBgYGYAEBAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAMDAwADw8PBgQEBKEFBQViAAAAAB0dHQAMDAwADAwMFQQEBLMICAgwBwcHAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACEhIQACAgIABwcHQQQEBL4ICAgzAAAAACsrKwMGBgZvBAQEnRYW
        FgYSEhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEwAwMDABBgYGYQQEBLoFBQWRBQUFngQE
        BLIHBwctAgICADIyMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEAATExMCCQkJKwYG
        BloGBgZQCgoKGAAAAAAbGxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////AAA//wAAA/8AAAB/AAAAfwAAAH8AAAB/AAAA/wAAAP8AAAD/AA
        AB/4AAAf+AAAH/gAAB/4AAA/+AAAP/gAAD/4AAA/+AAAf/gAAH/4AAB//AAAf/wAAP/8AAD//8wB///H
        n///x5///8cf///iH///4D////B///////8=
</value>
  </data>
</root>